version: '3'
volumes:
  mysql_data:
      driver: local

services:
  mysql-keycloak:
      image: mysql:8.0.20
      container_name: mysql-keycloak
      volumes:
        - mysql_data:/var/lib/mysql
      environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: keycloak
        MYSQL_USER: keycloak
        MYSQL_PASSWORD: FhXKGBnb3jAy
      networks:
        - wso2-keycloak-net

  keycloak:
      image: quay.io/keycloak/keycloak
      container_name: keycloak
      environment:
        DB_VENDOR: MYSQL
        DB_ADDR: mysql-keycloak
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_PASSWORD: FhXKGBnb3jAy
        KEYCLOAK_ADMIN: keyadmin
        KEYCLOAK_ADMIN_PASSWORD: jrsm161083
        KC_HOSTNAME: auth.in-deltarating.com.br
        KC_HOSTNAME_STRICT: false
        KC_HTTP_ENABLED: true
        KC_HTTP_PORT: 8080
        KC_METRICS_ENABLED: true
        KC_PROXY: edge
        PROXY_ADDRESS_FORWARDING: "true"
        REDIRECT_SOCKET: "proxy-https"
        KEYCLOAK_FRONTEND_URL: https://auth.in-deltarating.com.br/auth
        KC_FEATURES:
          authorization
          token-exchange
          docker
          impersonation
          scripts
          upload-scripts
          web-authn
          client-policies
          dynamic-scopes
      entrypoint: /opt/keycloak/bin/kc.sh start --optimized 
      #entrypoint: /opt/keycloak/bin/kc.sh start -Dkeycloak.profile.feature.upload_scripts=enabled --import-realm
      ports:
        - "127.0.0.1:8080:8080"
        - "127.0.0.1:8443:8443"
      networks:
        - wso2-keycloak-net
      depends_on:
        - mysql-keycloak

# Networks to be created to facilitate communication between containers
networks:
  wso2-keycloak-net:
    name:   wso2-keycloak-net

